import React, { useState, useEffect, useRef } from "react";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import ReactTypingEffect from "react-typing-effect";

import Icon from "../components/Icon";
// Icons
import Html from "../components/icons/Html";
import Css from "../components/icons/Css";
import Javascript from "../components/icons/Javascript";
import Tailwind from "../components/icons/Tailwind";
import Bootstrap from "../components/icons/Bootstrap";
import Sass from "../components/icons/Sass";
import ReactJs from "../components/icons/ReactJs";
import NextJs from "../components/icons/NextJs";
import NodeJs from "../components/icons/NodeJs";
import Firebase from "../components/icons/Firebase";
import Figma from "../components/icons/Figma";
import Photoshop from "../components/icons/Photoshop";
import Illustrator from "../components/icons/Illustrator";
import AfterEffects from "../components/icons/AfterEffects";
import AdobeXd from "../components/icons/AdobeXd";
// Project Card
import ProjectCard from "../components/ProjectCard";
import Live from "../components/Live";
import GitHub from "../components/GitHub";

const projects = [
  {
    title: "Rate My Film",
    overview:
      "Project overview goes here, telling the user a little about the problem that this program solves.",
    stack: ["Html", "ReactJs", "Sass"],
    link: "http://www.ratemyfilm.co.uk",
    repo: "http://www.repo.com",
  },
  {
    title: "Spotlight Media",
    overview:
      "Project overview goes here, telling the user a little about the problem that this program solves.",
    stack: ["Html", "ReactJs", "NextJs", "NodeJs"],
    link: "http://www.wearespotlight.co.uk",
    repo: "http://www.repo.com",
  },
  {
    title: "GPS Embroidery",
    overview:
      "Project overview goes here, telling the user a little about the problem that this program solves.",
    stack: ["Html", "ReactJs", "NextJs"],
    link: "http://www.gps-embroidery.com",
    repo: "http://www.repo.com",
  },
];

const getDimensions = (ele) => {
  const { height } = ele.getBoundingClientRect();
  const offsetTop = ele.offsetTop;
  const offsetBottom = offsetTop + height;

  return {
    height,
    offsetTop,
    offsetBottom,
  };
};

const scrollTo = (ele) => {
  ele.scrollIntoView({
    behavior: "smooth",
    block: "start",
  });
};

export default function Home() {
  const [visibleSection, setVisibleSection] = useState();
  const [small, setSmall] = useState(false);

  const headerRef = useRef(null);
  const homeRef = useRef(null);
  const aboutRef = useRef(null);
  const skillsRef = useRef(null);
  const myWorkRef = useRef(null);
  const blogRef = useRef(null);
  const contactRef = useRef(null);

  const sectionRefs = [
    { section: "home", ref: homeRef, id: 1 },
    { section: "about", ref: aboutRef, id: 2 },
    { section: "skills", ref: skillsRef, id: 3 },
    { section: "my-work", ref: myWorkRef, id: 4 },
    { section: "blog", ref: blogRef, id: 5 },
    { section: "contact", ref: contactRef, id: 6 },
  ];

  useEffect(() => {
    const handleScroll = () => {
      const { height: headerHeight } = getDimensions(headerRef.current);
      const scrollPosition = window.scrollY + headerHeight;

      const selected = sectionRefs.find(({ section, ref }) => {
        const ele = ref.current;
        if (ele) {
          const { offsetBottom, offsetTop } = getDimensions(ele);
          return scrollPosition >= offsetTop && scrollPosition <= offsetBottom;
        }
      });

      if (selected && selected.section !== visibleSection) {
        setVisibleSection(selected.section);
        console.log(visibleSection);
      } else if (!selected && visibleSection) {
        setVisibleSection(undefined);
      }
    };

    handleScroll();
    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, [visibleSection]);

  useEffect(() => {
    if (typeof window !== "undefined") {
      window.addEventListener("scroll", () =>
        setSmall(window.pageYOffset > 300)
      );
    }
  }, []);

  return (
    <div
      className="relative w-full
    min-h-screen bg-cover bg-right-bottom"
    >
      <Head>
        <title>Daniel Cranney | Frontend Developer & Designer</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* Header */}
      <header
        className={`header top-0 mx-auto flex items-center py-6 z-50 fixed w-full transition-all duration-500 h-24 ${
          small ? "bg-dark" : "bg-transparent"
        }`}
        ref={headerRef}
      >
        {/* Logo and Nav container */}
        <div className="relative container mx-auto flex items-center">
          {/* Logo */}
          <div className="w-12 h-12">
            <svg
              id="b613d120-e911-4f71-b7bc-d9b9e1bbdc6f"
              data-name="Layer 1"
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 93.13 75.2"
            >
              <rect
                className="fill-current text-brand"
                x="-3.43"
                y="39.29"
                width="32.19"
                height="8.78"
                rx="4.39"
                transform="translate(-27.18 21.75) rotate(-45)"
              />
              <rect
                className="fill-current text-brand"
                x="-3.43"
                y="22.74"
                width="32.19"
                height="8.78"
                rx="4.39"
                transform="translate(22.89 -1.01) rotate(45)"
              />
              <rect
                className="fill-current text-brand"
                x="64.37"
                y="22.74"
                width="32.19"
                height="8.78"
                rx="4.39"
                transform="translate(156.55 -10.59) rotate(135)"
              />
              <rect
                className="fill-current text-brand"
                x="64.37"
                y="39.29"
                width="32.19"
                height="8.78"
                rx="4.39"
                transform="translate(106.48 131.47) rotate(-135)"
              />
              <rect
                className="fill-current text-brand"
                x="41.93"
                y="-1.17"
                width="8.78"
                height="77.54"
                rx="4.39"
                transform="translate(11.31 -10.71) rotate(15)"
              />
            </svg>
          </div>
          {/* Nav */}
          <nav className="ml-auto z-50">
            <ul className="flex z-50 items-center">
              <li className="list-none mx-5 z-50">
                <button
                  href="#"
                  className={`z-50 header_link font-semibold transition-all duration-300 ease-in-out ${
                    visibleSection === "home"
                      ? "selected delay-300"
                      : "opacity-50 hover:opacity-100 border-b-2 border-transparent"
                  }`}
                  onClick={() => {
                    scrollTo(homeRef.current);
                  }}
                >
                  Home
                </button>
              </li>
              <li className="list-none mx-5 z-50">
                <button
                  href="#"
                  className={`z-50 header_link font-semibold transition-all duration-300 ease-in-out ${
                    visibleSection === "about"
                      ? "selected delay-300"
                      : "opacity-50 hover:opacity-100 border-b-2 border-transparent"
                  }`}
                  onClick={() => {
                    scrollTo(aboutRef.current);
                  }}
                >
                  About
                </button>
              </li>
              <li className="list-none mx-5 z-50">
                <button
                  href="#"
                  className={`z-50 header_link font-semibold transition-all duration-300 ease-in-out ${
                    visibleSection === "skills"
                      ? "selected delay-300"
                      : "opacity-50 hover:opacity-100 border-b-2 border-transparent"
                  }`}
                  onClick={() => {
                    scrollTo(skillsRef.current);
                  }}
                >
                  Skills
                </button>
              </li>
              <li className="list-none mx-5 z-50">
                <button
                  href="#"
                  className={`z-50 header_link font-semibold transition-all duration-300 ease-in-out ${
                    visibleSection === "my-work"
                      ? "selected delay-300"
                      : "opacity-50 hover:opacity-100 border-b-2 border-transparent"
                  }`}
                  onClick={() => {
                    scrollTo(myWorkRef.current);
                  }}
                >
                  My Work
                </button>
              </li>
              <li className="list-none mx-5 z-50">
                <button
                  href="#"
                  className={`z-50 header_link font-semibold transition-all duration-300 ease-in-out ${
                    visibleSection === "blog"
                      ? "selected delay-300"
                      : "opacity-50 hover:opacity-100 border-b-2 border-transparent"
                  }`}
                  onClick={() => {
                    scrollTo(blogRef.current);
                  }}
                >
                  Blog
                </button>
              </li>
              <li className="list-none mx-5 z-50">
                <button
                  href="#"
                  className={`z-50 header_link font-semibold transition-all duration-300 ease-in-out ${
                    visibleSection === "contact"
                      ? "selected delay-300"
                      : "opacity-50 hover:opacity-100 border-b-2 border-transparent"
                  }`}
                  onClick={() => {
                    scrollTo(contactRef.current);
                  }}
                >
                  Contact
                </button>
              </li>
              <li className="list-none mx-5 z-50">
                <button className="btn-brand btn-md">Hire me</button>
              </li>
            </ul>
          </nav>
        </div>
      </header>

      {/* Video background */}
      <div className="absolute z-10 w-auto max-w-full h-full overflow-hidden">
        {/* <video
          autoPlay
          loop
          muted
          src="/videos/landing-page-video.mp4"
          className="relative z-10 w-auto max-w-full min-h-full opacity-20"
        >
          Sorry, your browser doesn't support embedded videos.
        </video> */}
      </div>

      {/* // Icons */}
      <div className="fixed bottom-0 left-12 text-white items-center hidden md:flex md:flex-col z-30">
        <div className="w-8 h-8 mb-4">
          <svg
            className="fill-current opacity-50 hover:opacity-100 transition-all duration-300 translate-y-0 hover:-translate-y-1 ease-in-out transform"
            xmlns="http://www.w3.org/2000/svg"
            width="32"
            height="32"
            viewBox="0 0 24 24"
          >
            <path d="M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10S2 17.514 2 12 6.486 2 12 2zm0-2C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm0 6a6 6 0 00-1.896 11.693c.3.056.396-.13.396-.289v-1.117c-1.669.363-2.017-.707-2.017-.707-.272-.693-.666-.878-.666-.878-.544-.373.041-.365.041-.365.603.042.92.619.92.619.535.917 1.403.652 1.746.499.054-.388.209-.652.381-.802-1.333-.152-2.733-.667-2.733-2.965 0-.655.234-1.19.618-1.61-.062-.153-.268-.764.058-1.59 0 0 .504-.161 1.65.615A5.782 5.782 0 0112 8.901c.51.002 1.023.069 1.503.202 1.146-.776 1.648-.615 1.648-.615.327.826.121 1.437.06 1.588.385.42.617.955.617 1.61 0 2.305-1.404 2.812-2.74 2.96.216.186.412.551.412 1.111v1.646c0 .16.096.347.4.288A6 6 0 0012 6z" />
          </svg>
        </div>
        <div className="w-8 h-8 mb-4">
          <svg
            className="fill-current opacity-50 hover:opacity-100 transition-all duration-300 translate-y-0 hover:-translate-y-1 ease-in-out transform"
            xmlns="http://www.w3.org/2000/svg"
            width="32"
            height="32"
            viewBox="0 0 24 24"
          >
            <path d="M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10S2 17.514 2 12 6.486 2 12 2zm0-2C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm6.5 8.778a4.928 4.928 0 01-1.414.388 2.473 2.473 0 001.083-1.362 4.926 4.926 0 01-1.564.597 2.464 2.464 0 00-4.195 2.245 6.993 6.993 0 01-5.074-2.572 2.465 2.465 0 00.762 3.287 2.457 2.457 0 01-1.114-.308c-.027 1.14.791 2.207 1.975 2.445a2.467 2.467 0 01-1.112.042 2.465 2.465 0 002.3 1.709A4.955 4.955 0 016.5 16.27a6.963 6.963 0 003.773 1.106c4.572 0 7.154-3.861 6.998-7.324.482-.346.899-.78 1.229-1.274z" />
          </svg>
        </div>
        <div className="w-8 h-8 mb-4">
          <svg
            className="fill-current opacity-50 hover:opacity-100 transition-all duration-300 translate-y-0 hover:-translate-y-1 ease-in-out transform"
            xmlns="http://www.w3.org/2000/svg"
            width="32"
            height="32"
            viewBox="0 0 24 24"
          >
            <path d="M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10S2 17.514 2 12 6.486 2 12 2zm0-2C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm-2 8c0 .557-.447 1.008-1 1.008S8 8.558 8 8c0-.557.447-1.008 1-1.008S10 7.444 10 8zm0 2H8v6h2v-6zm3 0h-2v6h2v-2.861c0-1.722 2.002-1.881 2.002 0V16H17v-3.359c0-3.284-3.128-3.164-4-1.548V10z" />
          </svg>
        </div>
        <div className="w-0.5 bg-white h-24 opacity-20 mt-2"></div>
      </div>

      {/* // Progress Icons */}
      <div className="fixed bottom-0 right-12 text-white items-center hidden md:flex md:flex-col z-40">
        {/* Hero - Diamond 1 */}
        <button
          className="w-5 h-5 mb-4 z-40"
          onClick={() => {
            scrollTo(homeRef.current);
          }}
        >
          <svg
            id="e5c888e5-3206-4553-8f53-60ee93248ad9"
            className={`group rounded-sm transform  transition duration-500 ease-in-out hover:rotate-45 hover:scale-110 ${
              visibleSection === "home"
                ? "rotate-45 scale-110"
                : "rotate-0 scale-100"
            }`}
            data-name="Layer 1"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0
              0 24 24"
          >
            {/* Fill */}
            <path
              className={`fill-current origin-center transform transition duration-200 ease-in-out group-hover:text-dark group-hover:rotate-90 ${
                visibleSection === "home"
                  ? "text-white rotate-90"
                  : "text-dark rotate-0"
              }`}
              d="M5.64 5.64h12.73v12.73H5.64z"
            />
            {/* Border */}
            <path
              className={`fill-current origin-center transform transition duration-500 ease-in-out group-hover:text-white group-hover:rotate-45 group-hover:opacity-100 ${
                visibleSection === "home"
                  ? "text-white rotate-45 opacity-100"
                  : "text-white rotate-45 opacity-40"
              }`}
              d="M12 22.41L1.59 12 12 1.59 22.41 12zM4.41 12L12 19.59 19.59 12 12 4.41z"
            />
          </svg>
        </button>
        {/* About - Diamond 2 */}
        <button
          className="w-5 h-5 mb-4 z-40"
          onClick={() => {
            scrollTo(aboutRef.current);
          }}
        >
          <svg
            id="e5c888e5-3206-4553-8f53-60ee93248ad9"
            className={`group rounded-sm transform  transition duration-500 ease-in-out hover:rotate-45 hover:scale-110 ${
              visibleSection === "about"
                ? "rotate-45 scale-110"
                : "rotate-0 scale-100"
            }`}
            data-name="Layer 1"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0
              0 24 24"
          >
            {/* Fill */}
            <path
              className={`fill-current origin-center transform transition duration-200 ease-in-out group-hover:text-dark group-hover:rotate-90 ${
                visibleSection === "about"
                  ? "text-white rotate-90"
                  : "text-dark rotate-0"
              }`}
              d="M5.64 5.64h12.73v12.73H5.64z"
            />
            {/* Border */}
            <path
              className={`fill-current origin-center transform transition duration-500 ease-in-out group-hover:text-white group-hover:rotate-45 group-hover:opacity-100 ${
                visibleSection === "about"
                  ? "text-white rotate-45 opacity-100"
                  : "text-white rotate-45 opacity-40"
              }`}
              d="M12 22.41L1.59 12 12 1.59 22.41 12zM4.41 12L12 19.59 19.59 12 12 4.41z"
            />
          </svg>
        </button>
        {/* Skills - Diamond 3 */}
        <button
          className="w-5 h-5 mb-4 z-40"
          onClick={() => {
            scrollTo(skillsRef.current);
          }}
        >
          <svg
            id="e5c888e5-3206-4553-8f53-60ee93248ad9"
            className={`group rounded-sm transform  transition duration-500 ease-in-out hover:rotate-45 hover:scale-110 ${
              visibleSection === "skills"
                ? "rotate-45 scale-110"
                : "rotate-0 scale-100"
            }`}
            data-name="Layer 1"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0
              0 24 24"
          >
            {/* Fill */}
            <path
              className={`fill-current origin-center transform transition duration-200 ease-in-out group-hover:text-dark group-hover:rotate-90 ${
                visibleSection === "skills"
                  ? "text-white rotate-90"
                  : "text-dark rotate-0"
              }`}
              d="M5.64 5.64h12.73v12.73H5.64z"
            />
            {/* Border */}
            <path
              className={`fill-current origin-center transform transition duration-500 ease-in-out group-hover:text-white group-hover:rotate-45 group-hover:opacity-100 ${
                visibleSection === "skills"
                  ? "text-white rotate-45 opacity-100"
                  : "text-white rotate-45 opacity-40"
              }`}
              d="M12 22.41L1.59 12 12 1.59 22.41 12zM4.41 12L12 19.59 19.59 12 12 4.41z"
            />
          </svg>
        </button>
        {/* My Work - Diamond 4 */}
        <button
          className="w-5 h-5 mb-4 z-40"
          onClick={() => {
            scrollTo(myWorkRef.current);
          }}
        >
          <svg
            id="e5c888e5-3206-4553-8f53-60ee93248ad9"
            className={`group rounded-sm transform  transition duration-500 ease-in-out hover:rotate-45 hover:scale-110 ${
              visibleSection === "my-work"
                ? "rotate-45 scale-110"
                : "rotate-0 scale-100"
            }`}
            data-name="Layer 1"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0
              0 24 24"
          >
            {/* Fill */}
            <path
              className={`fill-current origin-center transform transition duration-200 ease-in-out group-hover:text-dark group-hover:rotate-90 ${
                visibleSection === "my-work"
                  ? "text-white rotate-90"
                  : "text-dark rotate-0"
              }`}
              d="M5.64 5.64h12.73v12.73H5.64z"
            />
            {/* Border */}
            <path
              className={`fill-current origin-center transform transition duration-500 ease-in-out group-hover:text-white group-hover:rotate-45 group-hover:opacity-100 ${
                visibleSection === "my-work"
                  ? "text-white rotate-45 opacity-100"
                  : "text-white rotate-45 opacity-40"
              }`}
              d="M12 22.41L1.59 12 12 1.59 22.41 12zM4.41 12L12 19.59 19.59 12 12 4.41z"
            />
          </svg>
        </button>
        {/* Blog - Diamond 5 */}
        <button
          className="w-5 h-5 mb-4 z-40"
          onClick={() => {
            scrollTo(blogRef.current);
          }}
        >
          <svg
            id="e5c888e5-3206-4553-8f53-60ee93248ad9"
            className={`group rounded-sm transform  transition duration-500 ease-in-out hover:rotate-45 hover:scale-110 ${
              visibleSection === "blog"
                ? "rotate-45 scale-110"
                : "rotate-0 scale-100"
            }`}
            data-name="Layer 1"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0
              0 24 24"
          >
            {/* Fill */}
            <path
              className={`fill-current origin-center transform transition duration-200 ease-in-out group-hover:text-dark group-hover:rotate-90 ${
                visibleSection === "blog"
                  ? "text-white rotate-90"
                  : "text-dark rotate-0"
              }`}
              d="M5.64 5.64h12.73v12.73H5.64z"
            />
            {/* Border */}
            <path
              className={`fill-current origin-center transform transition duration-500 ease-in-out group-hover:text-white group-hover:rotate-45 group-hover:opacity-100 ${
                visibleSection === "blog"
                  ? "text-white rotate-45 opacity-100"
                  : "text-white rotate-45 opacity-40"
              }`}
              d="M12 22.41L1.59 12 12 1.59 22.41 12zM4.41 12L12 19.59 19.59 12 12 4.41z"
            />
          </svg>
        </button>
        {/* Contact - Diamond 6 */}
        <button
          className="w-5 h-5 mb-4 z-40"
          onClick={() => {
            scrollTo(contactRef.current);
          }}
        >
          <svg
            id="e5c888e5-3206-4553-8f53-60ee93248ad9"
            className={`group rounded-sm transform  transition duration-500 ease-in-out hover:rotate-45 hover:scale-110 ${
              visibleSection === "contact"
                ? "rotate-45 scale-110"
                : "rotate-0 scale-100"
            }`}
            data-name="Layer 1"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0
              0 24 24"
          >
            {/* Fill */}
            <path
              className={`fill-current origin-center transform transition duration-200 ease-in-out group-hover:text-dark group-hover:rotate-90 ${
                visibleSection === "contact"
                  ? "text-white rotate-90"
                  : "text-dark rotate-0"
              }`}
              d="M5.64 5.64h12.73v12.73H5.64z"
            />
            {/* Border */}
            <path
              className={`fill-current origin-center transform transition duration-500 ease-in-out group-hover:text-white group-hover:rotate-45 group-hover:opacity-100 ${
                visibleSection === "contact"
                  ? "text-white rotate-45 opacity-100"
                  : "text-white rotate-45 opacity-40"
              }`}
              d="M12 22.41L1.59 12 12 1.59 22.41 12zM4.41 12L12 19.59 19.59 12 12 4.41z"
            />
          </svg>
        </button>

        {/* Line */}
        <div className="w-0.5 bg-white h-24 opacity-20 mt-2 z-30"></div>
      </div>

      <div className="h-screen container mx-auto z-30">
        {/* Hero Content */}
        <main className={`flex-col flex h-screen z-50`} id="home" ref={homeRef}>
          {/* Main */}
          <div className="container relative flex-grow mx-auto flex flex-col justify-center items-start px-28 section">
            <div className="w-3/5">
              <span className="text-2xl text-brand font-semibold">
                Hello! My name is
              </span>

              <h1 className="text-7xl mb-4">Daniel Cranney</h1>
              <h2 className="text-4xl text-light mb-4">
                <ReactTypingEffect
                  speed={50}
                  eraseSpeed={30}
                  eraseDelay={1500}
                  text={[`Frontend Developer`, "Designer"]}
                />
              </h2>
              <p className="text-xl">
                Brief introduction and description of my skills.
              </p>
              <button className="btn-brand btn-lg mt-4">Button</button>
            </div>
          </div>
        </main>

        {/* About */}
        <section
          className="px-28 w-full flex flex-col py-28 z-40 section"
          id="about"
          ref={aboutRef}
        >
          <div className="flex flex-col">
            <h2 className="text-5xl z-40">About</h2>
            <hr className="bg-brand w-40 h-1.5 mt-4 mb-6 border-0"></hr>

            <div className="flex w-full items-start">
              <div className="w-3/5 pr-8 flex flex-col">
                <p className="text-lg">
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                  Quisque est urna, dignissim et mauris id, ultrices finibus
                  ligula. Nulla accumsan mauris eu neque dapibus, ac ullamcorper
                  nunc pulvinar. Suspendisse odio justo.
                </p>
                <p className="text-lg">
                  Mauris feugiat quam metus, in tincidunt velit maximus vitae.
                  Aenean vitae venenatis arcu. Praesent ut egestas arcu. Duis
                  purus orci, cursus eget tortor scelerisque.
                </p>
                <p className="text-lg">
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                  Quisque est urna, dignissim et mauris id, ultrices finibus
                  ligula. Nulla accumsan mauris eu neque dapibus, ac ullamcorper
                  nunc pulvinar. Suspendisse odio justo, rutrum nec risus vel,
                  ornare ultricies diam. Vestibulum nec convallis justo.
                </p>
                <button className="self-start inline-block btn-outline btn-lg mt-8">
                  See my CV
                </button>
              </div>
              <div className="w-2/5 pl-8 h-full flex">
                <Image
                  src="/headshot-with-frame.png"
                  width={1624}
                  height={1624}
                />
              </div>
            </div>
          </div>
        </section>

        {/* Skills */}
        <section
          className="px-28 w-full flex flex-col py-28 z-40 section"
          id="skills"
          ref={skillsRef}
        >
          <h2 className="text-5xl z-40">Skills</h2>
          <hr className="bg-brand w-40 h-1.5 mt-4 mb-6 border-0"></hr>

          {/* Skills icons */}
          <div className="flex w-full mt-8 flex-wrap pr-4">
            {/* HTML icon */}
            <Icon
              IconType={Html}
              columnSizing={"w-1/6"}
              width={"w-24"}
              height={"h-24"}
              padding={"p-0"}
              title="HTML"
            />

            {/* CSS */}
            <Icon
              IconType={Css}
              columnSizing={"w-1/6"}
              width={"w-24"}
              height={"h-24"}
              padding={"p-0"}
              title="CSS"
            />

            {/* Sass */}
            <Icon
              IconType={Sass}
              columnSizing={"w-1/6"}
              width={"w-24"}
              height={"h-24"}
              padding={"p-0"}
              title="Sass"
            />

            {/* Bootstrap */}
            <Icon
              IconType={Bootstrap}
              columnSizing={"w-1/6"}
              width={"w-24"}
              height={"h-24"}
              padding={"p-0"}
              title="Bootstrap"
            />

            {/* Tailwind */}
            <Icon
              IconType={Tailwind}
              columnSizing={"w-1/6"}
              width={"w-24"}
              height={"h-24"}
              padding={"p-0"}
              title="Tailwind"
            />

            {/* Javascript */}
            <Icon
              IconType={Javascript}
              columnSizing={"w-1/6"}
              width={"w-24"}
              height={"h-24"}
              padding={"p-0"}
              title="Javascript"
            />

            {/* React */}
            <Icon
              IconType={ReactJs}
              columnSizing={"w-1/6"}
              width={"w-24"}
              height={"h-24"}
              padding={"p-0"}
              title="React"
            />

            {/* Next */}

            <Icon
              IconType={NextJs}
              columnSizing={"w-1/6"}
              width={"w-24"}
              height={"h-24"}
              padding={"p-0"}
              title="Next"
            />

            {/* Node */}

            <Icon
              IconType={NodeJs}
              columnSizing={"w-1/6"}
              width={"w-24"}
              height={"h-24"}
              padding={"p-0"}
              title="Node"
            />

            {/* Firebase */}

            <Icon
              IconType={Firebase}
              columnSizing={"w-1/6"}
              width={"w-24"}
              height={"h-24"}
              padding={"p-0"}
              title="Firebase"
            />

            {/* Photoshop */}

            <Icon
              IconType={Photoshop}
              columnSizing={"w-1/6"}
              width={"w-24"}
              height={"h-24"}
              padding={"p-0"}
              title="Photoshop"
            />

            {/* Illustrator */}

            <Icon
              IconType={Illustrator}
              columnSizing={"w-1/6"}
              width={"w-24"}
              height={"h-24"}
              padding={"p-0"}
              title="Illustrator"
            />

            {/* After Effects */}

            <Icon
              IconType={AfterEffects}
              columnSizing={"w-1/6"}
              width={"w-24"}
              height={"h-24"}
              padding={"p-0"}
              title="After Effects"
            />

            {/* Adobe XD */}

            <Icon
              IconType={AdobeXd}
              columnSizing={"w-1/6"}
              width={"w-24"}
              height={"h-24"}
              padding={"p-0"}
              title="Adobe XD"
            />

            {/* Figma */}

            <Icon
              IconType={Figma}
              columnSizing={"w-1/6"}
              width={"w-24"}
              height={"h-24"}
              padding={"p-0"}
              title="Figma"
            />
          </div>
        </section>

        {/* My Work */}
        <section
          className="px-28 w-full flex flex-col py-28 z-40 section"
          id="my-work"
          ref={myWorkRef}
        >
          {/* My Work header */}
          <h2 className="text-5xl z-40">My Work</h2>
          <hr className="bg-brand w-40 h-1.5 mt-4 mb-6 border-0"></hr>

          {/* Featured Projects Container */}
          <div className="w-full flex flex-col mb-12">
            {/* Project one */}
            <article className="w-full relative flex items-end my-4">
              {/* Project image */}
              <div className="flex w-1/6"></div>
              <div className="flex w-5/6 flex-col mt-8 pr-4 bg-dark hover:bg-dark">
                <Link
                  href="/"
                  className="rounded-sm filter blur-0 mix-blend-screen opacity-100 transition-all duration-300"
                >
                  <a>
                    <Image
                      src="/projects/culors.png"
                      width={1366}
                      height={666}
                    />
                  </a>
                </Link>
              </div>

              {/* Project info */}
              <div className="w-2/5 absolute left-0 bg-dark top-16 rounded-tl-none rounded-tr-none rounded-bl-md rounded-br-md py-8 px-8 border-t-4 border-brand">
                <p className="small-text tracking-wider mb-2">
                  Currently working on
                </p>
                <h3>Culors</h3>
                <div className="flex mb-4">
                  {/* React */}
                  <div className="flex items-center mr-5">
                    <Icon
                      IconType={ReactJs}
                      columnSizing={"w-full"}
                      width={"w-6"}
                      height={"h-6"}
                      padding={"p-0"}
                      title={null}
                    />
                    <span className="small-text ml-1">React</span>
                  </div>
                  {/* NextJS */}
                  <div className="flex items-center mr-5">
                    <Icon
                      IconType={NextJs}
                      columnSizing={"w-full"}
                      width={"w-6"}
                      height={"h-6"}
                      padding={"p-0"}
                      title={null}
                    />

                    <span className="small-text ml-1">Next</span>
                  </div>
                  {/* Tailwind */}
                  <div className="flex items-center mr-5">
                    <Icon
                      IconType={Tailwind}
                      columnSizing={"w-full"}
                      width={"w-6"}
                      height={"h-6"}
                      padding={"p-0"}
                      title={null}
                    />
                    <span className="small-text ml-1">Tailwind</span>
                  </div>
                </div>
                <p>
                  Project outline and description of what problem it solves.
                  More information here.
                </p>
                <div className="flex">
                  <Live />
                  <GitHub />
                </div>
              </div>
            </article>

            {/* Project two */}
            <article className="w-full relative flex items-end my-4">
              {/* Project image */}
              <div className="flex w-5/6 flex-col mt-8 pr-4 bg-dark">
                <Link
                  href="/"
                  className="rounded-sm filter blur-0 mix-blend-screen opacity-50 hover:opacity-100 transition-all duration-300"
                >
                  <a>
                    <Image
                      src="/projects/quotr.png"
                      width={1366}
                      height={666}
                    />
                  </a>
                </Link>
              </div>
              <div className="flex w-1/6"></div>

              {/* Project info */}
              <div className="w-2/5 absolute right-0 bg-dark top-16 rounded-tl-none rounded-tr-none rounded-bl-md rounded-br-md py-8 px-8 border-t-4 border-brand">
                <p className="small-text tracking-wider mb-2">
                  Featured Project
                </p>
                <h3>Quotr</h3>
                <div className="flex mb-4">
                  {/* HTML */}
                  <div className="flex items-center mr-5">
                    <Icon
                      IconType={Html}
                      columnSizing={"w-full"}
                      width={"w-6"}
                      height={"h-6"}
                      padding={"p-0"}
                      title={null}
                    />

                    <span className="small-text ml-1">Next</span>
                  </div>
                  {/* React */}
                  <div className="flex items-center mr-5">
                    <Icon
                      IconType={ReactJs}
                      columnSizing={"w-full"}
                      width={"w-6"}
                      height={"h-6"}
                      padding={"p-0"}
                      title={null}
                    />
                    <span className="small-text ml-1">React</span>
                  </div>
                  {/* Tailwind */}
                  <div className="flex items-center mr-5">
                    <Icon
                      IconType={Tailwind}
                      columnSizing={"w-full"}
                      width={"w-6"}
                      height={"h-6"}
                      padding={"p-0"}
                      title={null}
                    />
                    <span className="small-text ml-1">Tailwind</span>
                  </div>
                </div>
                <p>
                  Project outline and description of what problem it solves.
                  More information here.
                </p>
                <div className="flex">
                  <Live />
                  <GitHub />
                </div>
              </div>
            </article>
          </div>

          {/* Other Projects header */}
          <h2 className="text-4xl z-40 text-center">Other Projects</h2>
          <hr className="bg-brand w-40 h-1.5 mt-4 mb-6 mx-auto border-0"></hr>
          <p className="text-lg text-center mb-16">
            Here's some of the other things I've built or worked on
          </p>

          {/* Other Projects Container */}
          <div className="w-full flex justify-between flex-wrap">
            {projects.map(function (project, i) {
              return <ProjectCard project={project} key={i} />;
            })}
          </div>
        </section>

        {/* My Blog */}
        <section
          className="px-28 w-full flex flex-col py-28 z-40 section"
          id="blog"
          ref={blogRef}
        >
          <h2 className="text-5xl z-40">Blog</h2>
          <hr className="bg-brand w-40 h-1.5 mt-4 mb-6 border-0"></hr>

          {/* Blog */}
          <div className="flex w-full mt-8 flex-wrap justify-between">
            <article className="w-32pc flex flex-col">
              <div className="bg-mid h-60 rounded-sm"></div>
            </article>
            <article className="w-32pc flex flex-col">
              <div className="bg-mid h-60 rounded-sm"></div>
            </article>
            <article className="w-32pc flex flex-col">
              <div className="bg-mid h-60 rounded-sm"></div>
            </article>
          </div>
        </section>

        {/* Contact */}
        <section
          className="px-28 w-full flex flex-col py-28 z-40 section"
          id="contact"
          ref={contactRef}
        >
          <h2 className="text-5xl z-40">Contact</h2>
          <hr className="bg-brand w-40 h-1.5 mt-4 mb-6 border-0"></hr>

          {/* Contact */}

          <div className="flex w-full">
            <form
              method="post"
              // onSubmit={handleOnSubmit}
              className="w-3/5 pr-6"
            >
              <label htmlFor="name" className="flex mb-2">
                <div className="mr-2">
                  <svg
                    className="w-6 h-6"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                    />
                  </svg>
                </div>
                <div className="flex-grow">
                  <label htmlFor="name">Name:</label>
                </div>
              </label>

              <input
                type="text"
                placeholder="John Smith"
                // ref={nameElement}
                className="mt-2 mb-8"
                required
                name="name"
              />

              <label className="flex mb-2">
                <div className="mr-2">
                  <svg
                    className="w-6 h-6"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207"
                    />
                  </svg>
                </div>
                <div className="flex-grow">
                  <label htmlFor="email">Email:</label>
                </div>
              </label>

              <input
                type="email"
                name="email"
                placeholder="john@smith.com"
                // ref={emailElement}
                className="mt-2 mb-8"
                required
              />

              <label className="flex mb-2">
                <div className="mr-2">
                  <svg
                    className="w-6 h-6"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"
                    />
                  </svg>
                </div>
                <div className="flex-grow">
                  <label htmlFor="message">Message:</label>
                </div>
              </label>

              <textarea
                type="text"
                name="message"
                className="mt-2 h-36"
                // ref={messageElement}
                required
              />

              <button className="btn-brand btn-lg mt-8">Button</button>
            </form>
            <div className="w-2/5 pl-6">
              <p>
                If you'd like to work with me on a project, then I'd love to
                discuss it with you!
              </p>
              <p>
                Either send me a message using the form, or send one straight to
                my inbox at{" "}
                <Link href="mailto:me@danielcranney.com">
                  <a>me@danielcranney.com</a>
                </Link>
                .
              </p>
            </div>
          </div>
        </section>

        <footer className="px-28 w-full flex flex-col py-16 z-40 section">
          <hr className="bg-white opacity-10 w-full h-1 border-0 mb-16"></hr>
          <div className="w-8 mb-6">
            <svg
              id="abbe8588-8b21-44fd-a605-eb7de7f82941"
              data-name="Layer 1"
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 93.13 75.2"
            >
              <path
                className="fill-current text-light opacity-50"
                d="M24.05,38.51,7.5,55.06a4.39,4.39,0,1,1-6.21-6.21L14.74,35.41,1.29,22A4.39,4.39,0,0,1,7.5,15.75L24.05,32.3A4.4,4.4,0,0,1,24.05,38.51Z"
              />
              <path
                className="fill-current text-light opacity-50"
                d="M91.85,55.06a4.38,4.38,0,0,1-6.21,0L69.09,38.51a4.4,4.4,0,0,1,0-6.21L85.64,15.75A4.39,4.39,0,0,1,91.85,22L78.41,35.41,91.85,48.85A4.4,4.4,0,0,1,91.85,55.06Z"
              />
              <rect
                className="fill-current text-light opacity-50"
                x="41.93"
                y="-1.17"
                width="8.78"
                height="77.54"
                rx="4.39"
                transform="translate(11.31 -10.71) rotate(15)"
              />
            </svg>
          </div>

          <p className="mb-0">Designed and built by Daniel Cranney 2021</p>
        </footer>
      </div>
    </div>
  );
}
